name: Release

on:
  push:
    branches:
      - master
      - development
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - BASE_IMAGE: ortussolutions/commandbox
            BUILD_IMAGE_TAG: latest
            CFENGINE: lucee@5.4.4+38
          - BASE_IMAGE: ortussolutions/commandbox
            BUILD_IMAGE_TAG: lucee5
            CFENGINE: lucee@5.4.4+38
          - BASE_IMAGE: ortussolutions/commandbox:adobe2018
            BUILD_IMAGE_TAG: adobe2018
            CFENGINE: adobe@2018
          - BASE_IMAGE: ortussolutions/commandbox:adobe2021
            BUILD_IMAGE_TAG: adobe2021
            CFENGINE: adobe@2021
          - BASE_IMAGE: ortussolutions/commandbox:adobe2023
            BUILD_IMAGE_TAG: adobe2023
            CFENGINE: adobe@2023
          # Alpine builds
          # Note: No JDK builders currently support alpine with ARM
          - BASE_IMAGE: ortussolutions/commandbox:alpine
            BUILD_IMAGE_TAG: alpine
            CFENGINE: lucee@5.4.4+38
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Setup Builds
        id: setup
        env:
          DOCKER_IMAGE : ortussolutions/contentbox
          BUILD_IMAGE_TAG: ${{ matrix.BUILD_IMAGE_TAG }}
          IMAGE_VERSION: 6.0.1
        run: |
          # Tag Builds
          if [[ $GITHUB_REF == refs/tags/* ]]; then

            if [[ $BUILD_IMAGE_TAG == latest ]]; then
              BUILD_IMAGE_TAG="${GITHUB_REF#refs/tags/v}"
            else
              BUILD_IMAGE_TAG="${BUILD_IMAGE_TAG}-${GITHUB_REF#refs/tags/v}"
            fi

          elif [[ $GITHUB_REF == 'refs/heads/development' ]]; then

            # Snapshot builds
            BUILD_IMAGE_TAG="${BUILD_IMAGE_TAG}-snapshot"

          fi

          TAGS="${DOCKER_IMAGE}:${BUILD_IMAGE_TAG}"

          if [[ ${BUILD_IMAGE_TAG} == *"alpine"* ]]; then
            ARCH_PLATFORMS=linux/amd64
          else
            ARCH_PLATFORMS=linux/amd64,linux/arm64/v8
          fi


          # Set output parameters.
          echo ::set-output name=arch_platforms::${ARCH_PLATFORMS}
          echo ::set-output name=image_version::${IMAGE_VERSION}
          echo ::set-output name=tags::${TAGS}

      - name: DockerHub Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Final
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ matrix.BUILD_IMAGE_DOCKERFILE }}
          build-args: IMAGE_VERSION=${{ steps.setup.outputs.image_version }},TAGS=${{ steps.setup.outputs.tags }}
          platforms: ${{ steps.setup.outputs.arch_platforms }}
          push: true
          tags: ${{ steps.setup.outputs.tags }}

